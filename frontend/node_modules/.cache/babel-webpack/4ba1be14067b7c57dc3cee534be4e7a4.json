{"ast":null,"code":"import _asyncToGenerator from \"/Users/jreyesco/Desktop/market/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Fetch } from '../../Utils/Authentication';\nlet IndexComponent = class IndexComponent {\n  constructor(cookieService, router) {\n    var _this = this;\n\n    this.cookieService = cookieService;\n    this.router = router;\n    this.title = \"Market\";\n    this.email = null;\n    this.password = null;\n    this.loginURL = \"http://localhost:8000/login\";\n\n    this.handleEmailChange = event => {\n      console.log(\"Value\", event);\n    };\n\n    this.login = /*#__PURE__*/_asyncToGenerator(function* () {\n      const headers = {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      };\n      const body = JSON.stringify({\n        email: _this.email,\n        password: _this.password\n      });\n\n      try {\n        const data = yield Fetch(_this.loginURL, \"POST\", headers, body);\n\n        if (data[\"token\"]) {\n          _this.cookieService.set('market-token', data['token']);\n\n          location.replace(\"/dashboard\");\n          return;\n        }\n\n        throw Error;\n      } catch (Error) {\n        alert(\"Failure to login\");\n      }\n    });\n  }\n\n  ngOnInit() {\n    const marketToken = this.cookieService.get(\"market-token\");\n    if (marketToken) this.router.navigate(['/dashboard']);\n  }\n\n  signup() {\n    location.replace(\"/signup\");\n  }\n\n};\nIndexComponent = __decorate([Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.sass']\n})], IndexComponent);\nexport { IndexComponent };","map":{"version":3,"sources":["/Users/jreyesco/Desktop/market/frontend/src/app/components/index/index.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAA2D,eAA3D;AAGA,SAAQ,KAAR,QAAoB,4BAApB;AAQA,IAAa,cAAc,GAA3B,MAAa,cAAb,CAA2B;AASzB,EAAA,WAAA,CAAoB,aAApB,EAA0D,MAA1D,EAAwE;AAAA;;AAApD,SAAA,aAAA,GAAA,aAAA;AAAsC,SAAA,MAAA,GAAA,MAAA;AAPnD,SAAA,KAAA,GAAQ,QAAR;AAEP,SAAA,KAAA,GAAuB,IAAvB;AACA,SAAA,QAAA,GAA0B,IAA1B;AAEQ,SAAA,QAAA,GAAmB,6BAAnB;;AAUD,SAAA,iBAAA,GAAqB,KAAD,IAAU;AACnC,MAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,KAArB;AACD,KAFM;;AAIA,SAAA,KAAA,kCAAQ,aAAW;AAExB,YAAM,OAAO,GAAG;AAAC,wBAAiB;AAAlB,OAAhB;AACA,YAAM,IAAI,GAAG,IAAI,CAAC,SAAL,CAAe;AAAE,QAAA,KAAK,EAAE,KAAI,CAAC,KAAd;AAAqB,QAAA,QAAQ,EAAE,KAAI,CAAC;AAApC,OAAf,CAAb;;AAEA,UAAI;AAEA,cAAM,IAAI,SAAS,KAAK,CAAC,KAAI,CAAC,QAAN,EAAgB,MAAhB,EAAwB,OAAxB,EAAiC,IAAjC,CAAxB;;AAEA,YAAI,IAAI,CAAC,OAAD,CAAR,EAAmB;AACf,UAAA,KAAI,CAAC,aAAL,CAAmB,GAAnB,CAAuB,cAAvB,EAAuC,IAAI,CAAC,OAAD,CAA3C;;AACA,UAAA,QAAQ,CAAC,OAAT,CAAiB,YAAjB;AACA;AACH;;AAED,cAAM,KAAN;AAEH,OAZD,CAYE,OAAM,KAAN,EAAa;AACb,QAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF,KApBM;AAZqE;;AAE5E,EAAA,QAAQ,GAAA;AACN,UAAM,WAAW,GAAG,KAAK,aAAL,CAAmB,GAAnB,CAAuB,cAAvB,CAApB;AAEA,QAAG,WAAH,EAAgB,KAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACjB;;AA4BM,EAAA,MAAM,GAAA;AACX,IAAA,QAAQ,CAAC,OAAT,CAAiB,SAAjB;AACH;;AA7C0B,CAA3B;AAAa,cAAc,GAAA,UAAA,CAAA,CAN1B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,WADD;AAET,EAAA,WAAW,EAAE,wBAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,wBAAD;AAHF,CAAD,CAMiB,CAAA,EAAd,cAAc,CAAd;SAAA,c","sourcesContent":["import { Component, Input, NgModule, OnInit, Output } from '@angular/core'\nimport { CookieService } from 'ngx-cookie-service'\nimport { Router } from '@angular/router'\nimport {Fetch} from '../../Utils/Authentication'\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.sass']\n})\n\nexport class IndexComponent implements OnInit {\n\n  public title = \"Market\"\n\n  email: string | null = null\n  password: string | null = null\n\n  private loginURL: string = \"http://localhost:8000/login\"\n\n  constructor(private cookieService: CookieService, private router: Router) {}\n\n  ngOnInit(): void {\n    const marketToken = this.cookieService.get(\"market-token\")\n\n    if(marketToken) this.router.navigate(['/dashboard'])\n  }\n\n  public handleEmailChange = (event) => {\n    console.log(\"Value\", event)\n  }\n\n  public login = async () => {\n\n    const headers = {\"Content-Type\" : \"application/json; charset=utf-8\"}\n    const body = JSON.stringify({ email: this.email, password: this.password})\n    \n    try {   \n\n        const data = await Fetch(this.loginURL, \"POST\", headers, body)\n\n        if (data[\"token\"]) {\n            this.cookieService.set('market-token', data['token'])\n            location.replace(\"/dashboard\")\n            return\n        }\n\n        throw Error\n\n    } catch(Error) {\n      alert(\"Failure to login\")\n    }\n  }\n\n  public signup(){\n    location.replace(\"/signup\")\n}\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}