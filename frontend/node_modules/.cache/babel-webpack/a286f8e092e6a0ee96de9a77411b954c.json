{"ast":null,"code":"import _asyncToGenerator from \"/Users/jreyesco/Desktop/market/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jwt } from 'jsonwebtoken';\nexport const authenticate = token => {\n  let access = false;\n  jwt.verify(token, process.env.ACCESS_TOKEN_SECRET, algorithms = ['HS256'], function (err, decoded) {\n    if (decoded != null && decoded.authorization == process.env.USER_TOKEN_SECRET) {\n      access = true;\n    }\n  });\n  return access;\n};\nexport const getToken = req => {\n  try {\n    return req.cookies.market_token;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\nexport const getMarketToken = () => {\n  const cookies = document.cookie.split(';');\n  let market_token = null;\n\n  for (let i = 0; i < cookies.length; i++) {\n    if (cookies[i].includes('market_token=')) {\n      return market_token = cookies[i].split('market_token=')[1];\n    }\n  }\n\n  return market_token;\n};\nexport const Fetch = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (url, method, headers, body) {\n    try {\n      const req = yield fetch(url, {\n        method: method,\n        mode: \"cors\",\n        headers: headers,\n        body: body\n      });\n      const res = req.json();\n      if (!res) throw Error;\n      return res;\n    } catch (Error) {\n      console.log(Error);\n      window.location.replace('/');\n    }\n  });\n\n  return function Fetch(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/jreyesco/Desktop/market/frontend/src/app/utils/authentication.ts"],"names":[],"mappings":";AACA,SAAQ,GAAR,QAAkB,cAAlB;AAGA,OAAO,MAAM,YAAY,GAAI,KAAD,IAAmB;AAE3C,MAAI,MAAM,GAAY,KAAtB;AAEA,EAAA,GAAG,CAAC,MAAJ,CAAW,KAAX,EAAkB,OAAO,CAAC,GAAR,CAAY,mBAA9B,EAAmD,UAAU,GAAC,CAAC,OAAD,CAA9D,EAAyE,UAAS,GAAT,EAAc,OAAd,EAAqB;AAC1F,QAAG,OAAO,IAAI,IAAX,IAAoB,OAAO,CAAC,aAAR,IAAuB,OAAO,CAAC,GAAR,CAAY,iBAA1D,EAA4E;AACxE,MAAA,MAAM,GAAG,IAAT;AACH;AACJ,GAJD;AAMA,SAAO,MAAP;AACD,CAXI;AAaP,OAAO,MAAM,QAAQ,GAAI,GAAD,IAAiB;AACrC,MAAG;AACC,WAAO,GAAG,CAAC,OAAJ,CAAY,YAAnB;AACH,GAFD,CAEC,OAAM,KAAN,EAAY;AACT,IAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,WAAO,IAAP;AACH;AACF,CAPI;AASP,OAAO,MAAM,cAAc,GAAG,MAAK;AAC/B,QAAM,OAAO,GAAG,QAAQ,CAAC,MAAT,CAAgB,KAAhB,CAAsB,GAAtB,CAAhB;AACA,MAAI,YAAY,GAAoB,IAApC;;AAEA,OAAI,IAAI,CAAC,GAAG,CAAZ,EAAe,CAAC,GAAG,OAAO,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAuC;AACnC,QAAG,OAAO,CAAC,CAAD,CAAP,CAAW,QAAX,CAAoB,eAApB,CAAH,EAAwC;AACpC,aAAO,YAAY,GAAG,OAAO,CAAC,CAAD,CAAP,CAAW,KAAX,CAAiB,eAAjB,EAAkC,CAAlC,CAAtB;AACH;AACJ;;AACD,SAAO,YAAP;AACH,CAVM;AAYP,OAAO,MAAO,KAAK;AAAA,+BAAG,WAAO,GAAP,EAAoB,MAApB,EAA4C,OAA5C,EAA8E,IAA9E,EAAmH;AACrI,QAAG;AACC,YAAM,GAAG,SAAS,KAAK,CAAC,GAAD,EAAM;AACzB,QAAA,MAAM,EAAE,MADiB;AAEzB,QAAA,IAAI,EAAE,MAFmB;AAGzB,QAAA,OAAO,EAAE,OAHgB;AAIzB,QAAA,IAAI,EAAE;AAJmB,OAAN,CAAvB;AAOA,YAAM,GAAG,GAAG,GAAG,CAAC,IAAJ,EAAZ;AAEA,UAAG,CAAC,GAAJ,EAAS,MAAM,KAAN;AAET,aAAO,GAAP;AAEH,KAdD,CAcE,OAAM,KAAN,EAAa;AACX,MAAA,OAAO,CAAC,GAAR,CAAY,KAAZ;AACA,MAAA,MAAM,CAAC,QAAP,CAAgB,OAAhB,CAAwB,GAAxB;AAEH;AACJ,GApBkB;;AAAA,kBAAL,KAAK;AAAA;AAAA;AAAA,GAAZ","sourcesContent":["import {Jwt} from 'jsonwebtoken'\nimport {jwt} from 'jsonwebtoken'\n\n\nexport const authenticate = (token : string) => {\n\n    let access: boolean = false\n\n    jwt.verify(token, process.env.ACCESS_TOKEN_SECRET, algorithms=['HS256'], function(err, decoded) {\n        if(decoded != null  && decoded.authorization==process.env.USER_TOKEN_SECRET){\n            access = true\n        }\n    })\n\n    return access\n  }\n\nexport const getToken = (req: Request) => {\n    try{\n        return req.cookies.market_token\n    }catch(error){\n        console.log(error)\n        return null\n    }\n  }\n\nexport const getMarketToken = () => {\n    const cookies = document.cookie.split(';')\n    let market_token : string | null  = null\n\n    for(let i = 0; i < cookies.length; i++){\n        if(cookies[i].includes('market_token=')){\n            return market_token = cookies[i].split('market_token=')[1]\n        }\n    }\n    return market_token\n}\n\nexport const  Fetch = async (url: string, method: \"POST\" | \"GET\", headers: HeadersInit | undefined, body: BodyInit | null | undefined) => {\n    try{\n        const req = await fetch(url, {\n            method: method,\n            mode: \"cors\",\n            headers: headers,\n            body: body\n        })\n\n        const res = req.json()\n\n        if(!res) throw Error\n\n        return res\n\n    } catch(Error) {\n        console.log(Error)\n        window.location.replace('/')\n        \n    }\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}